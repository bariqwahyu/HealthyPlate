# -*- coding: utf-8 -*-
"""MobileNetV2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gZu1I6bN6nohY6gqU9giHtXdU32dBAdJ
"""

import os
import zipfile
import random
import shutil
#import cv2
import tensorflow as tf
import json
from shutil import copyfile
import matplotlib.pyplot as plt
from tensorflow.keras import layers
from tensorflow.keras import Model
from tensorflow.keras.optimizers import RMSprop
from tensorflow.keras.preprocessing.image import ImageDataGenerator

model_name = 'bahanMakanan/my_model.h5'
loaded=tf.keras.models.load_model(model_name)

import numpy as np
# from keras.preprocessing import image
from keras.utils import image_utils

# get recipe
import csv
def generate_recipe(food):
  # print(food)
  result = []
  with open("Bahan 50.csv", 'r') as csvfile:
    csv_reader = csv.DictReader(csvfile)
    line_count = 1
    for row in csv_reader:
      for key in food:
        if key in row["Bahan-Bahan"].lower():
          result.append(str(line_count))
          break
      line_count += 1

  #Remove duplicates of the result
  res = set(map(int,result))

  #Show the recipe based on the result (ID)
  recipe = []
  with open("Bahan 50.csv", 'r') as csvfile:
    csv_reader = csv.reader(csvfile, delimiter=',')
    line_count = 0
    for row in csv_reader:
      if line_count in res:
        recipe.append(row[1])
      line_count += 1
    # print(recipe)
  return recipe

# predicting images
def predict_image(image_path):
  img = image_utils.load_img(image_path, target_size=(224, 224))
  img = image_utils.img_to_array(img)
  img = img.reshape( -1,224, 224,3)
  predictions = loaded.predict(img)

  labels = predictions.argmax(axis=-1)
  bahan = []
  if labels == 0:
    bahan.append('apel')
  elif labels == 1:
    bahan.append('brokoli')
  elif labels == 2:
    bahan.append('pisang')
  elif labels == 3:
    bahan.append('telur')
  elif labels == 4:
    bahan.append('wortel')
  # print(bahan)
  # generate_recipe(bahan)
  return bahan

# image_path = 'apel.jpg'
# predict_image(image_path)
